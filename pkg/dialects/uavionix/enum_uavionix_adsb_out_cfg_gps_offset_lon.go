//autogenerated:yes
//nolint:revive,misspell,govet,lll,dupl,gocritic
package uavionix

import (
	"fmt"
	"strconv"
)

// GPS longitudinal offset encoding
type UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON uint32

const (
	UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_NO_DATA           UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON = 0
	UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_APPLIED_BY_SENSOR UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON = 1
)

var labels_UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON = map[UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON]string{
	UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_NO_DATA:           "UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_NO_DATA",
	UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_APPLIED_BY_SENSOR: "UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_APPLIED_BY_SENSOR",
}

var values_UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON = map[string]UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON{
	"UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_NO_DATA":           UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_NO_DATA,
	"UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_APPLIED_BY_SENSOR": UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON_APPLIED_BY_SENSOR,
}

// MarshalText implements the encoding.TextMarshaler interface.
func (e UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON) MarshalText() ([]byte, error) {
	name, ok := labels_UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON[e]
	if !ok {
		return nil, fmt.Errorf("invalid value %d", e)
	}
	return []byte(name), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface.
func (e *UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON) UnmarshalText(text []byte) error {
	value, ok := values_UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON[string(text)]
	if !ok {
		return fmt.Errorf("invalid label '%s'", text)
	}
	*e = value
	return nil
}

// String implements the fmt.Stringer interface.
func (e UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON) String() string {
	name, ok := labels_UAVIONIX_ADSB_OUT_CFG_GPS_OFFSET_LON[e]
	if !ok {
		return strconv.Itoa(int(e))
	}
	return name
}
