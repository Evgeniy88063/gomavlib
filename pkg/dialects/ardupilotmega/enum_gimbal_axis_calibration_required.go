//autogenerated:yes
//nolint:revive,misspell,govet,lll,dupl,gocritic
package ardupilotmega

import (
	"fmt"
	"strconv"
)

type GIMBAL_AXIS_CALIBRATION_REQUIRED uint32

const (
	// Whether or not this axis requires calibration is unknown at this time.
	GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN GIMBAL_AXIS_CALIBRATION_REQUIRED = 0
	// This axis requires calibration.
	GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE GIMBAL_AXIS_CALIBRATION_REQUIRED = 1
	// This axis does not require calibration.
	GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE GIMBAL_AXIS_CALIBRATION_REQUIRED = 2
)

var labels_GIMBAL_AXIS_CALIBRATION_REQUIRED = map[GIMBAL_AXIS_CALIBRATION_REQUIRED]string{
	GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN: "GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN",
	GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE:    "GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE",
	GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE:   "GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE",
}

var values_GIMBAL_AXIS_CALIBRATION_REQUIRED = map[string]GIMBAL_AXIS_CALIBRATION_REQUIRED{
	"GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN": GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN,
	"GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE":    GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE,
	"GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE":   GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE,
}

// MarshalText implements the encoding.TextMarshaler interface.
func (e GIMBAL_AXIS_CALIBRATION_REQUIRED) MarshalText() ([]byte, error) {
	name, ok := labels_GIMBAL_AXIS_CALIBRATION_REQUIRED[e]
	if !ok {
		return nil, fmt.Errorf("invalid value %d", e)
	}
	return []byte(name), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface.
func (e *GIMBAL_AXIS_CALIBRATION_REQUIRED) UnmarshalText(text []byte) error {
	value, ok := values_GIMBAL_AXIS_CALIBRATION_REQUIRED[string(text)]
	if !ok {
		return fmt.Errorf("invalid label '%s'", text)
	}
	*e = value
	return nil
}

// String implements the fmt.Stringer interface.
func (e GIMBAL_AXIS_CALIBRATION_REQUIRED) String() string {
	name, ok := labels_GIMBAL_AXIS_CALIBRATION_REQUIRED[e]
	if !ok {
		return strconv.Itoa(int(e))
	}
	return name
}
