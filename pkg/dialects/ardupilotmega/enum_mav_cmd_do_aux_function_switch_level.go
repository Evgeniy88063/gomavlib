//autogenerated:yes
//nolint:revive,misspell,govet,lll,dupl,gocritic
package ardupilotmega

import (
	"fmt"
	"strconv"
)

type MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL uint32

const (
	// Switch Low.
	MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_LOW MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL = 0
	// Switch Middle.
	MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_MIDDLE MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL = 1
	// Switch High.
	MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_HIGH MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL = 2
)

var labels_MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL = map[MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL]string{
	MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_LOW:    "MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_LOW",
	MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_MIDDLE: "MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_MIDDLE",
	MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_HIGH:   "MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_HIGH",
}

var values_MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL = map[string]MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL{
	"MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_LOW":    MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_LOW,
	"MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_MIDDLE": MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_MIDDLE,
	"MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_HIGH":   MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL_HIGH,
}

// MarshalText implements the encoding.TextMarshaler interface.
func (e MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL) MarshalText() ([]byte, error) {
	name, ok := labels_MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL[e]
	if !ok {
		return nil, fmt.Errorf("invalid value %d", e)
	}
	return []byte(name), nil
}

// UnmarshalText implements the encoding.TextUnmarshaler interface.
func (e *MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL) UnmarshalText(text []byte) error {
	value, ok := values_MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL[string(text)]
	if !ok {
		return fmt.Errorf("invalid label '%s'", text)
	}
	*e = value
	return nil
}

// String implements the fmt.Stringer interface.
func (e MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL) String() string {
	name, ok := labels_MAV_CMD_DO_AUX_FUNCTION_SWITCH_LEVEL[e]
	if !ok {
		return strconv.Itoa(int(e))
	}
	return name
}
