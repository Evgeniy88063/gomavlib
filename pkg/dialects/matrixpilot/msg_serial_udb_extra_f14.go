//autogenerated:yes
//nolint:golint,misspell,govet,lll
package matrixpilot

// Backwards compatible version of SERIAL_UDB_EXTRA F14: format
type MessageSerialUdbExtraF14 struct {
	// Serial UDB Extra Wind Estimation Enabled
	SueWindEstimation uint8 `mavname:"sue_WIND_ESTIMATION"`
	// Serial UDB Extra Type of GPS Unit
	SueGpsType uint8 `mavname:"sue_GPS_TYPE"`
	// Serial UDB Extra Dead Reckoning Enabled
	SueDr uint8 `mavname:"sue_DR"`
	// Serial UDB Extra Type of UDB Hardware
	SueBoardType uint8 `mavname:"sue_BOARD_TYPE"`
	// Serial UDB Extra Type of Airframe
	SueAirframe uint8 `mavname:"sue_AIRFRAME"`
	// Serial UDB Extra Reboot Register of DSPIC
	SueRcon int16 `mavname:"sue_RCON"`
	// Serial UDB Extra  Last dspic Trap Flags
	SueTrapFlags int16 `mavname:"sue_TRAP_FLAGS"`
	// Serial UDB Extra Type Program Address of Last Trap
	SueTrapSource uint32 `mavname:"sue_TRAP_SOURCE"`
	// Serial UDB Extra Number of Ocillator Failures
	SueOscFailCount int16
	// Serial UDB Extra UDB Internal Clock Configuration
	SueClockConfig uint8 `mavname:"sue_CLOCK_CONFIG"`
	// Serial UDB Extra Type of Flight Plan
	SueFlightPlanType uint8 `mavname:"sue_FLIGHT_PLAN_TYPE"`
}

// GetID implements the msg.Message interface.
func (*MessageSerialUdbExtraF14) GetID() uint32 {
	return 178
}
