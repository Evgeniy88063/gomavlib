//autogenerated:yes
//nolint:revive,misspell,govet,lll
package matrixpilot

// Backwards compatible version of SERIAL_UDB_EXTRA F4: format
type MessageSerialUdbExtraF4 struct {
	// Serial UDB Extra Roll Stabilization with Ailerons Enabled
	SueRollStabilizationAilerons uint8 `mavname:"sue_ROLL_STABILIZATION_AILERONS"`
	// Serial UDB Extra Roll Stabilization with Rudder Enabled
	SueRollStabilizationRudder uint8 `mavname:"sue_ROLL_STABILIZATION_RUDDER"`
	// Serial UDB Extra Pitch Stabilization Enabled
	SuePitchStabilization uint8 `mavname:"sue_PITCH_STABILIZATION"`
	// Serial UDB Extra Yaw Stabilization using Rudder Enabled
	SueYawStabilizationRudder uint8 `mavname:"sue_YAW_STABILIZATION_RUDDER"`
	// Serial UDB Extra Yaw Stabilization using Ailerons Enabled
	SueYawStabilizationAileron uint8 `mavname:"sue_YAW_STABILIZATION_AILERON"`
	// Serial UDB Extra Navigation with Ailerons Enabled
	SueAileronNavigation uint8 `mavname:"sue_AILERON_NAVIGATION"`
	// Serial UDB Extra Navigation with Rudder Enabled
	SueRudderNavigation uint8 `mavname:"sue_RUDDER_NAVIGATION"`
	// Serial UDB Extra Type of Alitude Hold when in Stabilized Mode
	SueAltitudeholdStabilized uint8 `mavname:"sue_ALTITUDEHOLD_STABILIZED"`
	// Serial UDB Extra Type of Alitude Hold when in Waypoint Mode
	SueAltitudeholdWaypoint uint8 `mavname:"sue_ALTITUDEHOLD_WAYPOINT"`
	// Serial UDB Extra Firmware racing mode enabled
	SueRacingMode uint8 `mavname:"sue_RACING_MODE"`
}

// GetID implements the msg.Message interface.
func (*MessageSerialUdbExtraF4) GetID() uint32 {
	return 172
}
