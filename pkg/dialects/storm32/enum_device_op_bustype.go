//autogenerated:yes
//nolint:revive,misspell,govet,lll,dupl
package storm32

import (
	"errors"
)

// Bus types for device operations.
type DEVICE_OP_BUSTYPE int

const (
	// I2C Device operation.
	DEVICE_OP_BUSTYPE_I2C DEVICE_OP_BUSTYPE = 0
	// SPI Device operation.
	DEVICE_OP_BUSTYPE_SPI DEVICE_OP_BUSTYPE = 1
)

var labels_DEVICE_OP_BUSTYPE = map[DEVICE_OP_BUSTYPE]string{}

// MarshalText implements the encoding.TextMarshaler interface.
func (e DEVICE_OP_BUSTYPE) MarshalText() ([]byte, error) {
	if l, ok := labels_DEVICE_OP_BUSTYPE[e]; ok {
		return []byte(l), nil
	}
	return nil, errors.New("invalid value")
}

var reverseLabels_DEVICE_OP_BUSTYPE = map[string]DEVICE_OP_BUSTYPE{}

// UnmarshalText implements the encoding.TextUnmarshaler interface.
func (e *DEVICE_OP_BUSTYPE) UnmarshalText(text []byte) error {
	if rl, ok := reverseLabels_DEVICE_OP_BUSTYPE[string(text)]; ok {
		*e = rl
		return nil
	}
	return errors.New("invalid value")
}

// String implements the fmt.Stringer interface.
func (e DEVICE_OP_BUSTYPE) String() string {
	if l, ok := labels_DEVICE_OP_BUSTYPE[e]; ok {
		return l
	}
	return "invalid value"
}
