// autogenerated with dialgen. do not edit.

package autoquad

import (
	"github.com/gswly/gomavlib"
)

// common.xml

type MessageHeartbeat struct {
	Type           uint8
	Autopilot      uint8
	BaseMode       uint8
	CustomMode     uint32
	SystemStatus   uint8
	MavlinkVersion uint8
}

func (*MessageHeartbeat) GetId() uint32 {
	return 0
}

type MessageSysStatus struct {
	OnboardControlSensorsPresent uint32
	OnboardControlSensorsEnabled uint32
	OnboardControlSensorsHealth  uint32
	Load                         uint16
	VoltageBattery               uint16
	CurrentBattery               int16
	BatteryRemaining             int8
	DropRateComm                 uint16
	ErrorsComm                   uint16
	ErrorsCount1                 uint16
	ErrorsCount2                 uint16
	ErrorsCount3                 uint16
	ErrorsCount4                 uint16
}

func (*MessageSysStatus) GetId() uint32 {
	return 1
}

type MessageSystemTime struct {
	TimeUnixUsec uint64
	TimeBootMs   uint32
}

func (*MessageSystemTime) GetId() uint32 {
	return 2
}

type MessagePing struct {
	TimeUsec        uint64
	Seq             uint32
	TargetSystem    uint8
	TargetComponent uint8
}

func (*MessagePing) GetId() uint32 {
	return 4
}

type MessageChangeOperatorControl struct {
	TargetSystem   uint8
	ControlRequest uint8
	Version        uint8
	Passkey        string `mavlen:"25"`
}

func (*MessageChangeOperatorControl) GetId() uint32 {
	return 5
}

type MessageChangeOperatorControlAck struct {
	GcsSystemId    uint8
	ControlRequest uint8
	Ack            uint8
}

func (*MessageChangeOperatorControlAck) GetId() uint32 {
	return 6
}

type MessageAuthKey struct {
	Key string `mavlen:"32"`
}

func (*MessageAuthKey) GetId() uint32 {
	return 7
}

type MessageSetMode struct {
	TargetSystem uint8
	BaseMode     uint8
	CustomMode   uint32
}

func (*MessageSetMode) GetId() uint32 {
	return 11
}

type MessageParamRequestRead struct {
	TargetSystem    uint8
	TargetComponent uint8
	ParamId         string `mavlen:"16"`
	ParamIndex      int16
}

func (*MessageParamRequestRead) GetId() uint32 {
	return 20
}

type MessageParamRequestList struct {
	TargetSystem    uint8
	TargetComponent uint8
}

func (*MessageParamRequestList) GetId() uint32 {
	return 21
}

type MessageParamValue struct {
	ParamId    string `mavlen:"16"`
	ParamValue float32
	ParamType  uint8
	ParamCount uint16
	ParamIndex uint16
}

func (*MessageParamValue) GetId() uint32 {
	return 22
}

type MessageParamSet struct {
	TargetSystem    uint8
	TargetComponent uint8
	ParamId         string `mavlen:"16"`
	ParamValue      float32
	ParamType       uint8
}

func (*MessageParamSet) GetId() uint32 {
	return 23
}

type MessageGpsRawInt struct {
	TimeUsec          uint64
	FixType           uint8
	Lat               int32
	Lon               int32
	Alt               int32
	Eph               uint16
	Epv               uint16
	Vel               uint16
	Cog               uint16
	SatellitesVisible uint8
	AltEllipsoid      int32  `mavext:"true"`
	HAcc              uint32 `mavext:"true"`
	VAcc              uint32 `mavext:"true"`
	VelAcc            uint32 `mavext:"true"`
	HdgAcc            uint32 `mavext:"true"`
}

func (*MessageGpsRawInt) GetId() uint32 {
	return 24
}

type MessageGpsStatus struct {
	SatellitesVisible  uint8
	SatellitePrn       [20]uint8
	SatelliteUsed      [20]uint8
	SatelliteElevation [20]uint8
	SatelliteAzimuth   [20]uint8
	SatelliteSnr       [20]uint8
}

func (*MessageGpsStatus) GetId() uint32 {
	return 25
}

type MessageScaledImu struct {
	TimeBootMs uint32
	Xacc       int16
	Yacc       int16
	Zacc       int16
	Xgyro      int16
	Ygyro      int16
	Zgyro      int16
	Xmag       int16
	Ymag       int16
	Zmag       int16
}

func (*MessageScaledImu) GetId() uint32 {
	return 26
}

type MessageRawImu struct {
	TimeUsec uint64
	Xacc     int16
	Yacc     int16
	Zacc     int16
	Xgyro    int16
	Ygyro    int16
	Zgyro    int16
	Xmag     int16
	Ymag     int16
	Zmag     int16
}

func (*MessageRawImu) GetId() uint32 {
	return 27
}

type MessageRawPressure struct {
	TimeUsec    uint64
	PressAbs    int16
	PressDiff1  int16
	PressDiff2  int16
	Temperature int16
}

func (*MessageRawPressure) GetId() uint32 {
	return 28
}

type MessageScaledPressure struct {
	TimeBootMs  uint32
	PressAbs    float32
	PressDiff   float32
	Temperature int16
}

func (*MessageScaledPressure) GetId() uint32 {
	return 29
}

type MessageAttitude struct {
	TimeBootMs uint32
	Roll       float32
	Pitch      float32
	Yaw        float32
	Rollspeed  float32
	Pitchspeed float32
	Yawspeed   float32
}

func (*MessageAttitude) GetId() uint32 {
	return 30
}

type MessageAttitudeQuaternion struct {
	TimeBootMs uint32
	Q1         float32
	Q2         float32
	Q3         float32
	Q4         float32
	Rollspeed  float32
	Pitchspeed float32
	Yawspeed   float32
}

func (*MessageAttitudeQuaternion) GetId() uint32 {
	return 31
}

type MessageLocalPositionNed struct {
	TimeBootMs uint32
	X          float32
	Y          float32
	Z          float32
	Vx         float32
	Vy         float32
	Vz         float32
}

func (*MessageLocalPositionNed) GetId() uint32 {
	return 32
}

type MessageGlobalPositionInt struct {
	TimeBootMs  uint32
	Lat         int32
	Lon         int32
	Alt         int32
	RelativeAlt int32
	Vx          int16
	Vy          int16
	Vz          int16
	Hdg         uint16
}

func (*MessageGlobalPositionInt) GetId() uint32 {
	return 33
}

type MessageRcChannelsScaled struct {
	TimeBootMs  uint32
	Port        uint8
	Chan1Scaled int16
	Chan2Scaled int16
	Chan3Scaled int16
	Chan4Scaled int16
	Chan5Scaled int16
	Chan6Scaled int16
	Chan7Scaled int16
	Chan8Scaled int16
	Rssi        uint8
}

func (*MessageRcChannelsScaled) GetId() uint32 {
	return 34
}

type MessageRcChannelsRaw struct {
	TimeBootMs uint32
	Port       uint8
	Chan1Raw   uint16
	Chan2Raw   uint16
	Chan3Raw   uint16
	Chan4Raw   uint16
	Chan5Raw   uint16
	Chan6Raw   uint16
	Chan7Raw   uint16
	Chan8Raw   uint16
	Rssi       uint8
}

func (*MessageRcChannelsRaw) GetId() uint32 {
	return 35
}

type MessageServoOutputRaw struct {
	TimeUsec   uint32
	Port       uint8
	Servo1Raw  uint16
	Servo2Raw  uint16
	Servo3Raw  uint16
	Servo4Raw  uint16
	Servo5Raw  uint16
	Servo6Raw  uint16
	Servo7Raw  uint16
	Servo8Raw  uint16
	Servo9Raw  uint16 `mavext:"true"`
	Servo10Raw uint16 `mavext:"true"`
	Servo11Raw uint16 `mavext:"true"`
	Servo12Raw uint16 `mavext:"true"`
	Servo13Raw uint16 `mavext:"true"`
	Servo14Raw uint16 `mavext:"true"`
	Servo15Raw uint16 `mavext:"true"`
	Servo16Raw uint16 `mavext:"true"`
}

func (*MessageServoOutputRaw) GetId() uint32 {
	return 36
}

type MessageMissionRequestPartialList struct {
	TargetSystem    uint8
	TargetComponent uint8
	StartIndex      int16
	EndIndex        int16
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionRequestPartialList) GetId() uint32 {
	return 37
}

type MessageMissionWritePartialList struct {
	TargetSystem    uint8
	TargetComponent uint8
	StartIndex      int16
	EndIndex        int16
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionWritePartialList) GetId() uint32 {
	return 38
}

type MessageMissionItem struct {
	TargetSystem    uint8
	TargetComponent uint8
	Seq             uint16
	Frame           uint8
	Command         uint16
	Current         uint8
	Autocontinue    uint8
	Param1          float32
	Param2          float32
	Param3          float32
	Param4          float32
	X               float32
	Y               float32
	Z               float32
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionItem) GetId() uint32 {
	return 39
}

type MessageMissionRequest struct {
	TargetSystem    uint8
	TargetComponent uint8
	Seq             uint16
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionRequest) GetId() uint32 {
	return 40
}

type MessageMissionSetCurrent struct {
	TargetSystem    uint8
	TargetComponent uint8
	Seq             uint16
}

func (*MessageMissionSetCurrent) GetId() uint32 {
	return 41
}

type MessageMissionCurrent struct {
	Seq uint16
}

func (*MessageMissionCurrent) GetId() uint32 {
	return 42
}

type MessageMissionRequestList struct {
	TargetSystem    uint8
	TargetComponent uint8
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionRequestList) GetId() uint32 {
	return 43
}

type MessageMissionCount struct {
	TargetSystem    uint8
	TargetComponent uint8
	Count           uint16
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionCount) GetId() uint32 {
	return 44
}

type MessageMissionClearAll struct {
	TargetSystem    uint8
	TargetComponent uint8
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionClearAll) GetId() uint32 {
	return 45
}

type MessageMissionItemReached struct {
	Seq uint16
}

func (*MessageMissionItemReached) GetId() uint32 {
	return 46
}

type MessageMissionAck struct {
	TargetSystem    uint8
	TargetComponent uint8
	Type            uint8
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionAck) GetId() uint32 {
	return 47
}

type MessageSetGpsGlobalOrigin struct {
	TargetSystem uint8
	Latitude     int32
	Longitude    int32
	Altitude     int32
	TimeUsec     uint64 `mavext:"true"`
}

func (*MessageSetGpsGlobalOrigin) GetId() uint32 {
	return 48
}

type MessageGpsGlobalOrigin struct {
	Latitude  int32
	Longitude int32
	Altitude  int32
	TimeUsec  uint64 `mavext:"true"`
}

func (*MessageGpsGlobalOrigin) GetId() uint32 {
	return 49
}

type MessageParamMapRc struct {
	TargetSystem            uint8
	TargetComponent         uint8
	ParamId                 string `mavlen:"16"`
	ParamIndex              int16
	ParameterRcChannelIndex uint8
	ParamValue0             float32
	Scale                   float32
	ParamValueMin           float32
	ParamValueMax           float32
}

func (*MessageParamMapRc) GetId() uint32 {
	return 50
}

type MessageMissionRequestInt struct {
	TargetSystem    uint8
	TargetComponent uint8
	Seq             uint16
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionRequestInt) GetId() uint32 {
	return 51
}

type MessageSafetySetAllowedArea struct {
	TargetSystem    uint8
	TargetComponent uint8
	Frame           uint8
	P1x             float32
	P1y             float32
	P1z             float32
	P2x             float32
	P2y             float32
	P2z             float32
}

func (*MessageSafetySetAllowedArea) GetId() uint32 {
	return 54
}

type MessageSafetyAllowedArea struct {
	Frame uint8
	P1x   float32
	P1y   float32
	P1z   float32
	P2x   float32
	P2y   float32
	P2z   float32
}

func (*MessageSafetyAllowedArea) GetId() uint32 {
	return 55
}

type MessageAttitudeQuaternionCov struct {
	TimeUsec   uint64
	Q          [4]float32
	Rollspeed  float32
	Pitchspeed float32
	Yawspeed   float32
	Covariance [9]float32
}

func (*MessageAttitudeQuaternionCov) GetId() uint32 {
	return 61
}

type MessageNavControllerOutput struct {
	NavRoll       float32
	NavPitch      float32
	NavBearing    int16
	TargetBearing int16
	WpDist        uint16
	AltError      float32
	AspdError     float32
	XtrackError   float32
}

func (*MessageNavControllerOutput) GetId() uint32 {
	return 62
}

type MessageGlobalPositionIntCov struct {
	TimeUsec      uint64
	EstimatorType uint8
	Lat           int32
	Lon           int32
	Alt           int32
	RelativeAlt   int32
	Vx            float32
	Vy            float32
	Vz            float32
	Covariance    [36]float32
}

func (*MessageGlobalPositionIntCov) GetId() uint32 {
	return 63
}

type MessageLocalPositionNedCov struct {
	TimeUsec      uint64
	EstimatorType uint8
	X             float32
	Y             float32
	Z             float32
	Vx            float32
	Vy            float32
	Vz            float32
	Ax            float32
	Ay            float32
	Az            float32
	Covariance    [45]float32
}

func (*MessageLocalPositionNedCov) GetId() uint32 {
	return 64
}

type MessageRcChannels struct {
	TimeBootMs uint32
	Chancount  uint8
	Chan1Raw   uint16
	Chan2Raw   uint16
	Chan3Raw   uint16
	Chan4Raw   uint16
	Chan5Raw   uint16
	Chan6Raw   uint16
	Chan7Raw   uint16
	Chan8Raw   uint16
	Chan9Raw   uint16
	Chan10Raw  uint16
	Chan11Raw  uint16
	Chan12Raw  uint16
	Chan13Raw  uint16
	Chan14Raw  uint16
	Chan15Raw  uint16
	Chan16Raw  uint16
	Chan17Raw  uint16
	Chan18Raw  uint16
	Rssi       uint8
}

func (*MessageRcChannels) GetId() uint32 {
	return 65
}

type MessageRequestDataStream struct {
	TargetSystem    uint8
	TargetComponent uint8
	ReqStreamId     uint8
	ReqMessageRate  uint16
	StartStop       uint8
}

func (*MessageRequestDataStream) GetId() uint32 {
	return 66
}

type MessageDataStream struct {
	StreamId    uint8
	MessageRate uint16
	OnOff       uint8
}

func (*MessageDataStream) GetId() uint32 {
	return 67
}

type MessageManualControl struct {
	Target  uint8
	X       int16
	Y       int16
	Z       int16
	R       int16
	Buttons uint16
}

func (*MessageManualControl) GetId() uint32 {
	return 69
}

type MessageRcChannelsOverride struct {
	TargetSystem    uint8
	TargetComponent uint8
	Chan1Raw        uint16
	Chan2Raw        uint16
	Chan3Raw        uint16
	Chan4Raw        uint16
	Chan5Raw        uint16
	Chan6Raw        uint16
	Chan7Raw        uint16
	Chan8Raw        uint16
	Chan9Raw        uint16 `mavext:"true"`
	Chan10Raw       uint16 `mavext:"true"`
	Chan11Raw       uint16 `mavext:"true"`
	Chan12Raw       uint16 `mavext:"true"`
	Chan13Raw       uint16 `mavext:"true"`
	Chan14Raw       uint16 `mavext:"true"`
	Chan15Raw       uint16 `mavext:"true"`
	Chan16Raw       uint16 `mavext:"true"`
	Chan17Raw       uint16 `mavext:"true"`
	Chan18Raw       uint16 `mavext:"true"`
}

func (*MessageRcChannelsOverride) GetId() uint32 {
	return 70
}

type MessageMissionItemInt struct {
	TargetSystem    uint8
	TargetComponent uint8
	Seq             uint16
	Frame           uint8
	Command         uint16
	Current         uint8
	Autocontinue    uint8
	Param1          float32
	Param2          float32
	Param3          float32
	Param4          float32
	X               int32
	Y               int32
	Z               float32
	MissionType     uint8 `mavext:"true"`
}

func (*MessageMissionItemInt) GetId() uint32 {
	return 73
}

type MessageVfrHud struct {
	Airspeed    float32
	Groundspeed float32
	Heading     int16
	Throttle    uint16
	Alt         float32
	Climb       float32
}

func (*MessageVfrHud) GetId() uint32 {
	return 74
}

type MessageCommandInt struct {
	TargetSystem    uint8
	TargetComponent uint8
	Frame           uint8
	Command         uint16
	Current         uint8
	Autocontinue    uint8
	Param1          float32
	Param2          float32
	Param3          float32
	Param4          float32
	X               int32
	Y               int32
	Z               float32
}

func (*MessageCommandInt) GetId() uint32 {
	return 75
}

type MessageCommandLong struct {
	TargetSystem    uint8
	TargetComponent uint8
	Command         uint16
	Confirmation    uint8
	Param1          float32
	Param2          float32
	Param3          float32
	Param4          float32
	Param5          float32
	Param6          float32
	Param7          float32
}

func (*MessageCommandLong) GetId() uint32 {
	return 76
}

type MessageCommandAck struct {
	Command         uint16
	Result          uint8
	Progress        uint8 `mavext:"true"`
	ResultParam2    int32 `mavext:"true"`
	TargetSystem    uint8 `mavext:"true"`
	TargetComponent uint8 `mavext:"true"`
}

func (*MessageCommandAck) GetId() uint32 {
	return 77
}

type MessageManualSetpoint struct {
	TimeBootMs           uint32
	Roll                 float32
	Pitch                float32
	Yaw                  float32
	Thrust               float32
	ModeSwitch           uint8
	ManualOverrideSwitch uint8
}

func (*MessageManualSetpoint) GetId() uint32 {
	return 81
}

type MessageSetAttitudeTarget struct {
	TimeBootMs      uint32
	TargetSystem    uint8
	TargetComponent uint8
	TypeMask        uint8
	Q               [4]float32
	BodyRollRate    float32
	BodyPitchRate   float32
	BodyYawRate     float32
	Thrust          float32
}

func (*MessageSetAttitudeTarget) GetId() uint32 {
	return 82
}

type MessageAttitudeTarget struct {
	TimeBootMs    uint32
	TypeMask      uint8
	Q             [4]float32
	BodyRollRate  float32
	BodyPitchRate float32
	BodyYawRate   float32
	Thrust        float32
}

func (*MessageAttitudeTarget) GetId() uint32 {
	return 83
}

type MessageSetPositionTargetLocalNed struct {
	TimeBootMs      uint32
	TargetSystem    uint8
	TargetComponent uint8
	CoordinateFrame uint8
	TypeMask        uint16
	X               float32
	Y               float32
	Z               float32
	Vx              float32
	Vy              float32
	Vz              float32
	Afx             float32
	Afy             float32
	Afz             float32
	Yaw             float32
	YawRate         float32
}

func (*MessageSetPositionTargetLocalNed) GetId() uint32 {
	return 84
}

type MessagePositionTargetLocalNed struct {
	TimeBootMs      uint32
	CoordinateFrame uint8
	TypeMask        uint16
	X               float32
	Y               float32
	Z               float32
	Vx              float32
	Vy              float32
	Vz              float32
	Afx             float32
	Afy             float32
	Afz             float32
	Yaw             float32
	YawRate         float32
}

func (*MessagePositionTargetLocalNed) GetId() uint32 {
	return 85
}

type MessageSetPositionTargetGlobalInt struct {
	TimeBootMs      uint32
	TargetSystem    uint8
	TargetComponent uint8
	CoordinateFrame uint8
	TypeMask        uint16
	LatInt          int32
	LonInt          int32
	Alt             float32
	Vx              float32
	Vy              float32
	Vz              float32
	Afx             float32
	Afy             float32
	Afz             float32
	Yaw             float32
	YawRate         float32
}

func (*MessageSetPositionTargetGlobalInt) GetId() uint32 {
	return 86
}

type MessagePositionTargetGlobalInt struct {
	TimeBootMs      uint32
	CoordinateFrame uint8
	TypeMask        uint16
	LatInt          int32
	LonInt          int32
	Alt             float32
	Vx              float32
	Vy              float32
	Vz              float32
	Afx             float32
	Afy             float32
	Afz             float32
	Yaw             float32
	YawRate         float32
}

func (*MessagePositionTargetGlobalInt) GetId() uint32 {
	return 87
}

type MessageLocalPositionNedSystemGlobalOffset struct {
	TimeBootMs uint32
	X          float32
	Y          float32
	Z          float32
	Roll       float32
	Pitch      float32
	Yaw        float32
}

func (*MessageLocalPositionNedSystemGlobalOffset) GetId() uint32 {
	return 89
}

type MessageHilState struct {
	TimeUsec   uint64
	Roll       float32
	Pitch      float32
	Yaw        float32
	Rollspeed  float32
	Pitchspeed float32
	Yawspeed   float32
	Lat        int32
	Lon        int32
	Alt        int32
	Vx         int16
	Vy         int16
	Vz         int16
	Xacc       int16
	Yacc       int16
	Zacc       int16
}

func (*MessageHilState) GetId() uint32 {
	return 90
}

type MessageHilControls struct {
	TimeUsec      uint64
	RollAilerons  float32
	PitchElevator float32
	YawRudder     float32
	Throttle      float32
	Aux1          float32
	Aux2          float32
	Aux3          float32
	Aux4          float32
	Mode          uint8
	NavMode       uint8
}

func (*MessageHilControls) GetId() uint32 {
	return 91
}

type MessageHilRcInputsRaw struct {
	TimeUsec  uint64
	Chan1Raw  uint16
	Chan2Raw  uint16
	Chan3Raw  uint16
	Chan4Raw  uint16
	Chan5Raw  uint16
	Chan6Raw  uint16
	Chan7Raw  uint16
	Chan8Raw  uint16
	Chan9Raw  uint16
	Chan10Raw uint16
	Chan11Raw uint16
	Chan12Raw uint16
	Rssi      uint8
}

func (*MessageHilRcInputsRaw) GetId() uint32 {
	return 92
}

type MessageHilActuatorControls struct {
	TimeUsec uint64
	Controls [16]float32
	Mode     uint8
	Flags    uint64
}

func (*MessageHilActuatorControls) GetId() uint32 {
	return 93
}

type MessageOpticalFlow struct {
	TimeUsec       uint64
	SensorId       uint8
	FlowX          int16
	FlowY          int16
	FlowCompMX     float32
	FlowCompMY     float32
	Quality        uint8
	GroundDistance float32
	FlowRateX      float32 `mavext:"true"`
	FlowRateY      float32 `mavext:"true"`
}

func (*MessageOpticalFlow) GetId() uint32 {
	return 100
}

type MessageGlobalVisionPositionEstimate struct {
	Usec       uint64
	X          float32
	Y          float32
	Z          float32
	Roll       float32
	Pitch      float32
	Yaw        float32
	Covariance [21]float32 `mavext:"true"`
}

func (*MessageGlobalVisionPositionEstimate) GetId() uint32 {
	return 101
}

type MessageVisionPositionEstimate struct {
	Usec       uint64
	X          float32
	Y          float32
	Z          float32
	Roll       float32
	Pitch      float32
	Yaw        float32
	Covariance [21]float32 `mavext:"true"`
}

func (*MessageVisionPositionEstimate) GetId() uint32 {
	return 102
}

type MessageVisionSpeedEstimate struct {
	Usec       uint64
	X          float32
	Y          float32
	Z          float32
	Covariance [9]float32 `mavext:"true"`
}

func (*MessageVisionSpeedEstimate) GetId() uint32 {
	return 103
}

type MessageViconPositionEstimate struct {
	Usec       uint64
	X          float32
	Y          float32
	Z          float32
	Roll       float32
	Pitch      float32
	Yaw        float32
	Covariance [21]float32 `mavext:"true"`
}

func (*MessageViconPositionEstimate) GetId() uint32 {
	return 104
}

type MessageHighresImu struct {
	TimeUsec      uint64
	Xacc          float32
	Yacc          float32
	Zacc          float32
	Xgyro         float32
	Ygyro         float32
	Zgyro         float32
	Xmag          float32
	Ymag          float32
	Zmag          float32
	AbsPressure   float32
	DiffPressure  float32
	PressureAlt   float32
	Temperature   float32
	FieldsUpdated uint16
}

func (*MessageHighresImu) GetId() uint32 {
	return 105
}

type MessageOpticalFlowRad struct {
	TimeUsec            uint64
	SensorId            uint8
	IntegrationTimeUs   uint32
	IntegratedX         float32
	IntegratedY         float32
	IntegratedXgyro     float32
	IntegratedYgyro     float32
	IntegratedZgyro     float32
	Temperature         int16
	Quality             uint8
	TimeDeltaDistanceUs uint32
	Distance            float32
}

func (*MessageOpticalFlowRad) GetId() uint32 {
	return 106
}

type MessageHilSensor struct {
	TimeUsec      uint64
	Xacc          float32
	Yacc          float32
	Zacc          float32
	Xgyro         float32
	Ygyro         float32
	Zgyro         float32
	Xmag          float32
	Ymag          float32
	Zmag          float32
	AbsPressure   float32
	DiffPressure  float32
	PressureAlt   float32
	Temperature   float32
	FieldsUpdated uint32
}

func (*MessageHilSensor) GetId() uint32 {
	return 107
}

type MessageSimState struct {
	Q1         float32
	Q2         float32
	Q3         float32
	Q4         float32
	Roll       float32
	Pitch      float32
	Yaw        float32
	Xacc       float32
	Yacc       float32
	Zacc       float32
	Xgyro      float32
	Ygyro      float32
	Zgyro      float32
	Lat        float32
	Lon        float32
	Alt        float32
	StdDevHorz float32
	StdDevVert float32
	Vn         float32
	Ve         float32
	Vd         float32
}

func (*MessageSimState) GetId() uint32 {
	return 108
}

type MessageRadioStatus struct {
	Rssi     uint8
	Remrssi  uint8
	Txbuf    uint8
	Noise    uint8
	Remnoise uint8
	Rxerrors uint16
	Fixed    uint16
}

func (*MessageRadioStatus) GetId() uint32 {
	return 109
}

type MessageFileTransferProtocol struct {
	TargetNetwork   uint8
	TargetSystem    uint8
	TargetComponent uint8
	Payload         [251]uint8
}

func (*MessageFileTransferProtocol) GetId() uint32 {
	return 110
}

type MessageTimesync struct {
	Tc1 int64
	Ts1 int64
}

func (*MessageTimesync) GetId() uint32 {
	return 111
}

type MessageCameraTrigger struct {
	TimeUsec uint64
	Seq      uint32
}

func (*MessageCameraTrigger) GetId() uint32 {
	return 112
}

type MessageHilGps struct {
	TimeUsec          uint64
	FixType           uint8
	Lat               int32
	Lon               int32
	Alt               int32
	Eph               uint16
	Epv               uint16
	Vel               uint16
	Vn                int16
	Ve                int16
	Vd                int16
	Cog               uint16
	SatellitesVisible uint8
}

func (*MessageHilGps) GetId() uint32 {
	return 113
}

type MessageHilOpticalFlow struct {
	TimeUsec            uint64
	SensorId            uint8
	IntegrationTimeUs   uint32
	IntegratedX         float32
	IntegratedY         float32
	IntegratedXgyro     float32
	IntegratedYgyro     float32
	IntegratedZgyro     float32
	Temperature         int16
	Quality             uint8
	TimeDeltaDistanceUs uint32
	Distance            float32
}

func (*MessageHilOpticalFlow) GetId() uint32 {
	return 114
}

type MessageHilStateQuaternion struct {
	TimeUsec           uint64
	AttitudeQuaternion [4]float32
	Rollspeed          float32
	Pitchspeed         float32
	Yawspeed           float32
	Lat                int32
	Lon                int32
	Alt                int32
	Vx                 int16
	Vy                 int16
	Vz                 int16
	IndAirspeed        uint16
	TrueAirspeed       uint16
	Xacc               int16
	Yacc               int16
	Zacc               int16
}

func (*MessageHilStateQuaternion) GetId() uint32 {
	return 115
}

type MessageScaledImu2 struct {
	TimeBootMs uint32
	Xacc       int16
	Yacc       int16
	Zacc       int16
	Xgyro      int16
	Ygyro      int16
	Zgyro      int16
	Xmag       int16
	Ymag       int16
	Zmag       int16
}

func (*MessageScaledImu2) GetId() uint32 {
	return 116
}

type MessageLogRequestList struct {
	TargetSystem    uint8
	TargetComponent uint8
	Start           uint16
	End             uint16
}

func (*MessageLogRequestList) GetId() uint32 {
	return 117
}

type MessageLogEntry struct {
	Id         uint16
	NumLogs    uint16
	LastLogNum uint16
	TimeUtc    uint32
	Size       uint32
}

func (*MessageLogEntry) GetId() uint32 {
	return 118
}

type MessageLogRequestData struct {
	TargetSystem    uint8
	TargetComponent uint8
	Id              uint16
	Ofs             uint32
	Count           uint32
}

func (*MessageLogRequestData) GetId() uint32 {
	return 119
}

type MessageLogData struct {
	Id    uint16
	Ofs   uint32
	Count uint8
	Data  [90]uint8
}

func (*MessageLogData) GetId() uint32 {
	return 120
}

type MessageLogErase struct {
	TargetSystem    uint8
	TargetComponent uint8
}

func (*MessageLogErase) GetId() uint32 {
	return 121
}

type MessageLogRequestEnd struct {
	TargetSystem    uint8
	TargetComponent uint8
}

func (*MessageLogRequestEnd) GetId() uint32 {
	return 122
}

type MessageGpsInjectData struct {
	TargetSystem    uint8
	TargetComponent uint8
	Len             uint8
	Data            [110]uint8
}

func (*MessageGpsInjectData) GetId() uint32 {
	return 123
}

type MessageGps2Raw struct {
	TimeUsec          uint64
	FixType           uint8
	Lat               int32
	Lon               int32
	Alt               int32
	Eph               uint16
	Epv               uint16
	Vel               uint16
	Cog               uint16
	SatellitesVisible uint8
	DgpsNumch         uint8
	DgpsAge           uint32
}

func (*MessageGps2Raw) GetId() uint32 {
	return 124
}

type MessagePowerStatus struct {
	Vcc    uint16
	Vservo uint16
	Flags  uint16
}

func (*MessagePowerStatus) GetId() uint32 {
	return 125
}

type MessageSerialControl struct {
	Device   uint8
	Flags    uint8
	Timeout  uint16
	Baudrate uint32
	Count    uint8
	Data     [70]uint8
}

func (*MessageSerialControl) GetId() uint32 {
	return 126
}

type MessageGpsRtk struct {
	TimeLastBaselineMs uint32
	RtkReceiverId      uint8
	Wn                 uint16
	Tow                uint32
	RtkHealth          uint8
	RtkRate            uint8
	Nsats              uint8
	BaselineCoordsType uint8
	BaselineAMm        int32
	BaselineBMm        int32
	BaselineCMm        int32
	Accuracy           uint32
	IarNumHypotheses   int32
}

func (*MessageGpsRtk) GetId() uint32 {
	return 127
}

type MessageGps2Rtk struct {
	TimeLastBaselineMs uint32
	RtkReceiverId      uint8
	Wn                 uint16
	Tow                uint32
	RtkHealth          uint8
	RtkRate            uint8
	Nsats              uint8
	BaselineCoordsType uint8
	BaselineAMm        int32
	BaselineBMm        int32
	BaselineCMm        int32
	Accuracy           uint32
	IarNumHypotheses   int32
}

func (*MessageGps2Rtk) GetId() uint32 {
	return 128
}

type MessageScaledImu3 struct {
	TimeBootMs uint32
	Xacc       int16
	Yacc       int16
	Zacc       int16
	Xgyro      int16
	Ygyro      int16
	Zgyro      int16
	Xmag       int16
	Ymag       int16
	Zmag       int16
}

func (*MessageScaledImu3) GetId() uint32 {
	return 129
}

type MessageDataTransmissionHandshake struct {
	Type       uint8
	Size       uint32
	Width      uint16
	Height     uint16
	Packets    uint16
	Payload    uint8
	JpgQuality uint8
}

func (*MessageDataTransmissionHandshake) GetId() uint32 {
	return 130
}

type MessageEncapsulatedData struct {
	Seqnr uint16
	Data  [253]uint8
}

func (*MessageEncapsulatedData) GetId() uint32 {
	return 131
}

type MessageDistanceSensor struct {
	TimeBootMs      uint32
	MinDistance     uint16
	MaxDistance     uint16
	CurrentDistance uint16
	Type            uint8
	Id              uint8
	Orientation     uint8
	Covariance      uint8
	HorizontalFov   float32    `mavext:"true"`
	VerticalFov     float32    `mavext:"true"`
	Quaternion      [4]float32 `mavext:"true"`
}

func (*MessageDistanceSensor) GetId() uint32 {
	return 132
}

type MessageTerrainRequest struct {
	Lat         int32
	Lon         int32
	GridSpacing uint16
	Mask        uint64
}

func (*MessageTerrainRequest) GetId() uint32 {
	return 133
}

type MessageTerrainData struct {
	Lat         int32
	Lon         int32
	GridSpacing uint16
	Gridbit     uint8
	Data        [16]int16
}

func (*MessageTerrainData) GetId() uint32 {
	return 134
}

type MessageTerrainCheck struct {
	Lat int32
	Lon int32
}

func (*MessageTerrainCheck) GetId() uint32 {
	return 135
}

type MessageTerrainReport struct {
	Lat           int32
	Lon           int32
	Spacing       uint16
	TerrainHeight float32
	CurrentHeight float32
	Pending       uint16
	Loaded        uint16
}

func (*MessageTerrainReport) GetId() uint32 {
	return 136
}

type MessageScaledPressure2 struct {
	TimeBootMs  uint32
	PressAbs    float32
	PressDiff   float32
	Temperature int16
}

func (*MessageScaledPressure2) GetId() uint32 {
	return 137
}

type MessageAttPosMocap struct {
	TimeUsec   uint64
	Q          [4]float32
	X          float32
	Y          float32
	Z          float32
	Covariance [21]float32 `mavext:"true"`
}

func (*MessageAttPosMocap) GetId() uint32 {
	return 138
}

type MessageSetActuatorControlTarget struct {
	TimeUsec        uint64
	GroupMlx        uint8
	TargetSystem    uint8
	TargetComponent uint8
	Controls        [8]float32
}

func (*MessageSetActuatorControlTarget) GetId() uint32 {
	return 139
}

type MessageActuatorControlTarget struct {
	TimeUsec uint64
	GroupMlx uint8
	Controls [8]float32
}

func (*MessageActuatorControlTarget) GetId() uint32 {
	return 140
}

type MessageAltitude struct {
	TimeUsec          uint64
	AltitudeMonotonic float32
	AltitudeAmsl      float32
	AltitudeLocal     float32
	AltitudeRelative  float32
	AltitudeTerrain   float32
	BottomClearance   float32
}

func (*MessageAltitude) GetId() uint32 {
	return 141
}

type MessageResourceRequest struct {
	RequestId    uint8
	UriType      uint8
	Uri          [120]uint8
	TransferType uint8
	Storage      [120]uint8
}

func (*MessageResourceRequest) GetId() uint32 {
	return 142
}

type MessageScaledPressure3 struct {
	TimeBootMs  uint32
	PressAbs    float32
	PressDiff   float32
	Temperature int16
}

func (*MessageScaledPressure3) GetId() uint32 {
	return 143
}

type MessageFollowTarget struct {
	Timestamp       uint64
	EstCapabilities uint8
	Lat             int32
	Lon             int32
	Alt             float32
	Vel             [3]float32
	Acc             [3]float32
	AttitudeQ       [4]float32
	Rates           [3]float32
	PositionCov     [3]float32
	CustomState     uint64
}

func (*MessageFollowTarget) GetId() uint32 {
	return 144
}

type MessageControlSystemState struct {
	TimeUsec    uint64
	XAcc        float32
	YAcc        float32
	ZAcc        float32
	XVel        float32
	YVel        float32
	ZVel        float32
	XPos        float32
	YPos        float32
	ZPos        float32
	Airspeed    float32
	VelVariance [3]float32
	PosVariance [3]float32
	Q           [4]float32
	RollRate    float32
	PitchRate   float32
	YawRate     float32
}

func (*MessageControlSystemState) GetId() uint32 {
	return 146
}

type MessageBatteryStatus struct {
	Id               uint8
	BatteryFunction  uint8
	Type             uint8
	Temperature      int16
	Voltages         [10]uint16
	CurrentBattery   int16
	CurrentConsumed  int32
	EnergyConsumed   int32
	BatteryRemaining int8
	TimeRemaining    int32 `mavext:"true"`
	ChargeState      uint8 `mavext:"true"`
}

func (*MessageBatteryStatus) GetId() uint32 {
	return 147
}

type MessageAutopilotVersion struct {
	Capabilities            uint64
	FlightSwVersion         uint32
	MiddlewareSwVersion     uint32
	OsSwVersion             uint32
	BoardVersion            uint32
	FlightCustomVersion     [8]uint8
	MiddlewareCustomVersion [8]uint8
	OsCustomVersion         [8]uint8
	VendorId                uint16
	ProductId               uint16
	Uid                     uint64
	Uid2                    [18]uint8 `mavext:"true"`
}

func (*MessageAutopilotVersion) GetId() uint32 {
	return 148
}

type MessageLandingTarget struct {
	TimeUsec      uint64
	TargetNum     uint8
	Frame         uint8
	AngleX        float32
	AngleY        float32
	Distance      float32
	SizeX         float32
	SizeY         float32
	X             float32    `mavext:"true"`
	Y             float32    `mavext:"true"`
	Z             float32    `mavext:"true"`
	Q             [4]float32 `mavext:"true"`
	Type          uint8      `mavext:"true"`
	PositionValid uint8      `mavext:"true"`
}

func (*MessageLandingTarget) GetId() uint32 {
	return 149
}

type MessageEstimatorStatus struct {
	TimeUsec         uint64
	Flags            uint16
	VelRatio         float32
	PosHorizRatio    float32
	PosVertRatio     float32
	MagRatio         float32
	HaglRatio        float32
	TasRatio         float32
	PosHorizAccuracy float32
	PosVertAccuracy  float32
}

func (*MessageEstimatorStatus) GetId() uint32 {
	return 230
}

type MessageWindCov struct {
	TimeUsec      uint64
	WindX         float32
	WindY         float32
	WindZ         float32
	VarHoriz      float32
	VarVert       float32
	WindAlt       float32
	HorizAccuracy float32
	VertAccuracy  float32
}

func (*MessageWindCov) GetId() uint32 {
	return 231
}

type MessageGpsInput struct {
	TimeUsec          uint64
	GpsId             uint8
	IgnoreFlags       uint16
	TimeWeekMs        uint32
	TimeWeek          uint16
	FixType           uint8
	Lat               int32
	Lon               int32
	Alt               float32
	Hdop              float32
	Vdop              float32
	Vn                float32
	Ve                float32
	Vd                float32
	SpeedAccuracy     float32
	HorizAccuracy     float32
	VertAccuracy      float32
	SatellitesVisible uint8
}

func (*MessageGpsInput) GetId() uint32 {
	return 232
}

type MessageGpsRtcmData struct {
	Flags uint8
	Len   uint8
	Data  [180]uint8
}

func (*MessageGpsRtcmData) GetId() uint32 {
	return 233
}

type MessageHighLatency struct {
	BaseMode         uint8
	CustomMode       uint32
	LandedState      uint8
	Roll             int16
	Pitch            int16
	Heading          uint16
	Throttle         int8
	HeadingSp        int16
	Latitude         int32
	Longitude        int32
	AltitudeAmsl     int16
	AltitudeSp       int16
	Airspeed         uint8
	AirspeedSp       uint8
	Groundspeed      uint8
	ClimbRate        int8
	GpsNsat          uint8
	GpsFixType       uint8
	BatteryRemaining uint8
	Temperature      int8
	TemperatureAir   int8
	Failsafe         uint8
	WpNum            uint8
	WpDistance       uint16
}

func (*MessageHighLatency) GetId() uint32 {
	return 234
}

type MessageHighLatency2 struct {
	Timestamp      uint32
	Type           uint8
	Autopilot      uint8
	CustomMode     uint16
	Latitude       int32
	Longitude      int32
	Altitude       int16
	TargetAltitude int16
	Heading        uint8
	TargetHeading  uint8
	TargetDistance uint16
	Throttle       uint8
	Airspeed       uint8
	AirspeedSp     uint8
	Groundspeed    uint8
	Windspeed      uint8
	WindHeading    uint8
	Eph            uint8
	Epv            uint8
	TemperatureAir int8
	ClimbRate      int8
	Battery        int8
	WpNum          uint16
	FailureFlags   uint16
	Custom0        int8
	Custom1        int8
	Custom2        int8
}

func (*MessageHighLatency2) GetId() uint32 {
	return 235
}

type MessageVibration struct {
	TimeUsec   uint64
	VibrationX float32
	VibrationY float32
	VibrationZ float32
	Clipping_0 uint32
	Clipping_1 uint32
	Clipping_2 uint32
}

func (*MessageVibration) GetId() uint32 {
	return 241
}

type MessageHomePosition struct {
	Latitude  int32
	Longitude int32
	Altitude  int32
	X         float32
	Y         float32
	Z         float32
	Q         [4]float32
	ApproachX float32
	ApproachY float32
	ApproachZ float32
	TimeUsec  uint64 `mavext:"true"`
}

func (*MessageHomePosition) GetId() uint32 {
	return 242
}

type MessageSetHomePosition struct {
	TargetSystem uint8
	Latitude     int32
	Longitude    int32
	Altitude     int32
	X            float32
	Y            float32
	Z            float32
	Q            [4]float32
	ApproachX    float32
	ApproachY    float32
	ApproachZ    float32
	TimeUsec     uint64 `mavext:"true"`
}

func (*MessageSetHomePosition) GetId() uint32 {
	return 243
}

type MessageMessageInterval struct {
	MessageId  uint16
	IntervalUs int32
}

func (*MessageMessageInterval) GetId() uint32 {
	return 244
}

type MessageExtendedSysState struct {
	VtolState   uint8
	LandedState uint8
}

func (*MessageExtendedSysState) GetId() uint32 {
	return 245
}

type MessageAdsbVehicle struct {
	IcaoAddress  uint32
	Lat          int32
	Lon          int32
	AltitudeType uint8
	Altitude     int32
	Heading      uint16
	HorVelocity  uint16
	VerVelocity  int16
	Callsign     string `mavlen:"9"`
	EmitterType  uint8
	Tslc         uint8
	Flags        uint16
	Squawk       uint16
}

func (*MessageAdsbVehicle) GetId() uint32 {
	return 246
}

type MessageCollision struct {
	Src                    uint8
	Id                     uint32
	Action                 uint8
	ThreatLevel            uint8
	TimeToMinimumDelta     float32
	AltitudeMinimumDelta   float32
	HorizontalMinimumDelta float32
}

func (*MessageCollision) GetId() uint32 {
	return 247
}

type MessageV2Extension struct {
	TargetNetwork   uint8
	TargetSystem    uint8
	TargetComponent uint8
	MessageType     uint16
	Payload         [249]uint8
}

func (*MessageV2Extension) GetId() uint32 {
	return 248
}

type MessageMemoryVect struct {
	Address uint16
	Ver     uint8
	Type    uint8
	Value   [32]int8
}

func (*MessageMemoryVect) GetId() uint32 {
	return 249
}

type MessageDebugVect struct {
	Name     string `mavlen:"10"`
	TimeUsec uint64
	X        float32
	Y        float32
	Z        float32
}

func (*MessageDebugVect) GetId() uint32 {
	return 250
}

type MessageNamedValueFloat struct {
	TimeBootMs uint32
	Name       string `mavlen:"10"`
	Value      float32
}

func (*MessageNamedValueFloat) GetId() uint32 {
	return 251
}

type MessageNamedValueInt struct {
	TimeBootMs uint32
	Name       string `mavlen:"10"`
	Value      int32
}

func (*MessageNamedValueInt) GetId() uint32 {
	return 252
}

type MessageStatustext struct {
	Severity uint8
	Text     string `mavlen:"50"`
}

func (*MessageStatustext) GetId() uint32 {
	return 253
}

type MessageDebug struct {
	TimeBootMs uint32
	Ind        uint8
	Value      float32
}

func (*MessageDebug) GetId() uint32 {
	return 254
}

type MessageSetupSigning struct {
	TargetSystem     uint8
	TargetComponent  uint8
	SecretKey        [32]uint8
	InitialTimestamp uint64
}

func (*MessageSetupSigning) GetId() uint32 {
	return 256
}

type MessageButtonChange struct {
	TimeBootMs   uint32
	LastChangeMs uint32
	State        uint8
}

func (*MessageButtonChange) GetId() uint32 {
	return 257
}

type MessagePlayTune struct {
	TargetSystem    uint8
	TargetComponent uint8
	Tune            string `mavlen:"30"`
	Tune2           string `mavext:"true",mavlen:"200"`
}

func (*MessagePlayTune) GetId() uint32 {
	return 258
}

type MessageCameraInformation struct {
	TimeBootMs           uint32
	VendorName           [32]uint8
	ModelName            [32]uint8
	FirmwareVersion      uint32
	FocalLength          float32
	SensorSizeH          float32
	SensorSizeV          float32
	ResolutionH          uint16
	ResolutionV          uint16
	LensId               uint8
	Flags                uint32
	CamDefinitionVersion uint16
	CamDefinitionUri     string `mavlen:"140"`
}

func (*MessageCameraInformation) GetId() uint32 {
	return 259
}

type MessageCameraSettings struct {
	TimeBootMs uint32
	ModeId     uint8
	Zoomlevel  float32 `mavext:"true"`
	Focuslevel float32 `mavext:"true"`
}

func (*MessageCameraSettings) GetId() uint32 {
	return 260
}

type MessageStorageInformation struct {
	TimeBootMs        uint32
	StorageId         uint8
	StorageCount      uint8
	Status            uint8
	TotalCapacity     float32
	UsedCapacity      float32
	AvailableCapacity float32
	ReadSpeed         float32
	WriteSpeed        float32
}

func (*MessageStorageInformation) GetId() uint32 {
	return 261
}

type MessageCameraCaptureStatus struct {
	TimeBootMs        uint32
	ImageStatus       uint8
	VideoStatus       uint8
	ImageInterval     float32
	RecordingTimeMs   uint32
	AvailableCapacity float32
}

func (*MessageCameraCaptureStatus) GetId() uint32 {
	return 262
}

type MessageCameraImageCaptured struct {
	TimeBootMs    uint32
	TimeUtc       uint64
	CameraId      uint8
	Lat           int32
	Lon           int32
	Alt           int32
	RelativeAlt   int32
	Q             [4]float32
	ImageIndex    int32
	CaptureResult int8
	FileUrl       string `mavlen:"205"`
}

func (*MessageCameraImageCaptured) GetId() uint32 {
	return 263
}

type MessageFlightInformation struct {
	TimeBootMs     uint32
	ArmingTimeUtc  uint64
	TakeoffTimeUtc uint64
	FlightUuid     uint64
}

func (*MessageFlightInformation) GetId() uint32 {
	return 264
}

type MessageMountOrientation struct {
	TimeBootMs  uint32
	Roll        float32
	Pitch       float32
	Yaw         float32
	YawAbsolute float32 `mavext:"true"`
}

func (*MessageMountOrientation) GetId() uint32 {
	return 265
}

type MessageLoggingData struct {
	TargetSystem       uint8
	TargetComponent    uint8
	Sequence           uint16
	Length             uint8
	FirstMessageOffset uint8
	Data               [249]uint8
}

func (*MessageLoggingData) GetId() uint32 {
	return 266
}

type MessageLoggingDataAcked struct {
	TargetSystem       uint8
	TargetComponent    uint8
	Sequence           uint16
	Length             uint8
	FirstMessageOffset uint8
	Data               [249]uint8
}

func (*MessageLoggingDataAcked) GetId() uint32 {
	return 267
}

type MessageLoggingAck struct {
	TargetSystem    uint8
	TargetComponent uint8
	Sequence        uint16
}

func (*MessageLoggingAck) GetId() uint32 {
	return 268
}

type MessageVideoStreamInformation struct {
	StreamId    uint8
	Count       uint8
	Type        uint8
	Flags       uint16
	Framerate   float32
	ResolutionH uint16
	ResolutionV uint16
	Bitrate     uint32
	Rotation    uint16
	Hfov        uint16
	Name        string `mavlen:"32"`
	Uri         string `mavlen:"160"`
}

func (*MessageVideoStreamInformation) GetId() uint32 {
	return 269
}

type MessageVideoStreamStatus struct {
	StreamId    uint8
	Flags       uint16
	Framerate   float32
	ResolutionH uint16
	ResolutionV uint16
	Bitrate     uint32
	Rotation    uint16
	Hfov        uint16
}

func (*MessageVideoStreamStatus) GetId() uint32 {
	return 270
}

type MessageWifiConfigAp struct {
	Ssid     string `mavlen:"32"`
	Password string `mavlen:"64"`
}

func (*MessageWifiConfigAp) GetId() uint32 {
	return 299
}

type MessageProtocolVersion struct {
	Version            uint16
	MinVersion         uint16
	MaxVersion         uint16
	SpecVersionHash    [8]uint8
	LibraryVersionHash [8]uint8
}

func (*MessageProtocolVersion) GetId() uint32 {
	return 300
}

type MessageUavcanNodeStatus struct {
	TimeUsec                 uint64
	UptimeSec                uint32
	Health                   uint8
	Mode                     uint8
	SubMode                  uint8
	VendorSpecificStatusCode uint16
}

func (*MessageUavcanNodeStatus) GetId() uint32 {
	return 310
}

type MessageUavcanNodeInfo struct {
	TimeUsec       uint64
	UptimeSec      uint32
	Name           string `mavlen:"80"`
	HwVersionMajor uint8
	HwVersionMinor uint8
	HwUniqueId     [16]uint8
	SwVersionMajor uint8
	SwVersionMinor uint8
	SwVcsCommit    uint32
}

func (*MessageUavcanNodeInfo) GetId() uint32 {
	return 311
}

type MessageParamExtRequestRead struct {
	TargetSystem    uint8
	TargetComponent uint8
	ParamId         string `mavlen:"16"`
	ParamIndex      int16
}

func (*MessageParamExtRequestRead) GetId() uint32 {
	return 320
}

type MessageParamExtRequestList struct {
	TargetSystem    uint8
	TargetComponent uint8
}

func (*MessageParamExtRequestList) GetId() uint32 {
	return 321
}

type MessageParamExtValue struct {
	ParamId    string `mavlen:"16"`
	ParamValue string `mavlen:"128"`
	ParamType  uint8
	ParamCount uint16
	ParamIndex uint16
}

func (*MessageParamExtValue) GetId() uint32 {
	return 322
}

type MessageParamExtSet struct {
	TargetSystem    uint8
	TargetComponent uint8
	ParamId         string `mavlen:"16"`
	ParamValue      string `mavlen:"128"`
	ParamType       uint8
}

func (*MessageParamExtSet) GetId() uint32 {
	return 323
}

type MessageParamExtAck struct {
	ParamId     string `mavlen:"16"`
	ParamValue  string `mavlen:"128"`
	ParamType   uint8
	ParamResult uint8
}

func (*MessageParamExtAck) GetId() uint32 {
	return 324
}

type MessageObstacleDistance struct {
	TimeUsec    uint64
	SensorType  uint8
	Distances   [72]uint16
	Increment   uint8
	MinDistance uint16
	MaxDistance uint16
}

func (*MessageObstacleDistance) GetId() uint32 {
	return 330
}

type MessageOdometry struct {
	TimeUsec           uint64
	FrameId            uint8
	ChildFrameId       uint8
	X                  float32
	Y                  float32
	Z                  float32
	Q                  [4]float32
	Vx                 float32
	Vy                 float32
	Vz                 float32
	Rollspeed          float32
	Pitchspeed         float32
	Yawspeed           float32
	PoseCovariance     [21]float32
	VelocityCovariance [21]float32
}

func (*MessageOdometry) GetId() uint32 {
	return 331
}

type MessageTrajectoryRepresentationWaypoints struct {
	TimeUsec    uint64
	ValidPoints uint8
	PosX        [5]float32
	PosY        [5]float32
	PosZ        [5]float32
	VelX        [5]float32
	VelY        [5]float32
	VelZ        [5]float32
	AccX        [5]float32
	AccY        [5]float32
	AccZ        [5]float32
	PosYaw      [5]float32
	VelYaw      [5]float32
}

func (*MessageTrajectoryRepresentationWaypoints) GetId() uint32 {
	return 332
}

type MessageTrajectoryRepresentationBezier struct {
	TimeUsec    uint64
	ValidPoints uint8
	PosX        [5]float32
	PosY        [5]float32
	PosZ        [5]float32
	Delta       [5]float32
	PosYaw      [5]float32
}

func (*MessageTrajectoryRepresentationBezier) GetId() uint32 {
	return 333
}

type MessageCellularStatus struct {
	Status  uint16
	Type    uint8
	Quality uint8
	Mcc     uint16
	Mnc     uint16
	Lac     uint16
	Cid     uint32
}

func (*MessageCellularStatus) GetId() uint32 {
	return 334
}

type MessageUtmGlobalPosition struct {
	Time        uint64
	UasId       [18]uint8
	Lat         int32
	Lon         int32
	Alt         int32
	RelativeAlt int32
	Vx          int16
	Vy          int16
	Vz          int16
	HAcc        uint16
	VAcc        uint16
	VelAcc      uint16
	NextLat     int32
	NextLon     int32
	NextAlt     int32
	UpdateRate  uint16
	FlightState uint8
	Flags       uint8
}

func (*MessageUtmGlobalPosition) GetId() uint32 {
	return 340
}

type MessageDebugFloatArray struct {
	TimeUsec uint64
	Name     string `mavlen:"10"`
	ArrayId  uint16
	Data     [58]float32 `mavext:"true"`
}

func (*MessageDebugFloatArray) GetId() uint32 {
	return 350
}

type MessageOrbitExecutionStatus struct {
	TimeUsec uint64
	Radius   float32
	Frame    uint8
	X        int32
	Y        int32
	Z        float32
}

func (*MessageOrbitExecutionStatus) GetId() uint32 {
	return 360
}

type MessageStatustextLong struct {
	Severity uint8
	Text     string `mavlen:"254"`
}

func (*MessageStatustextLong) GetId() uint32 {
	return 365
}

type MessageSmartBatteryInfo struct {
	Id                        uint8
	CapacityFullSpecification int32
	CapacityFull              int32
	CycleCount                uint16
	SerialNumber              int32
	DeviceName                string `mavlen:"50"`
	Weight                    uint16
	DischargeMinimumVoltage   uint16
	ChargingMinimumVoltage    uint16
	RestingMinimumVoltage     uint16
}

func (*MessageSmartBatteryInfo) GetId() uint32 {
	return 370
}

type MessageSmartBatteryStatus struct {
	Id                uint16
	CapacityRemaining int16
	Current           int16
	Temperature       int16
	FaultBitmask      int32
	TimeRemaining     int32
	CellOffset        uint16
	Voltages          [16]uint16
}

func (*MessageSmartBatteryStatus) GetId() uint32 {
	return 371
}

type MessageWheelDistance struct {
	TimeUsec uint64
	Count    uint8
	Distance [16]float64
}

func (*MessageWheelDistance) GetId() uint32 {
	return 9000
}

// autoquad.xml

type MessageAqTelemetryF struct {
	Index   uint16
	Value1  float32
	Value2  float32
	Value3  float32
	Value4  float32
	Value5  float32
	Value6  float32
	Value7  float32
	Value8  float32
	Value9  float32
	Value10 float32
	Value11 float32
	Value12 float32
	Value13 float32
	Value14 float32
	Value15 float32
	Value16 float32
	Value17 float32
	Value18 float32
	Value19 float32
	Value20 float32
}

func (*MessageAqTelemetryF) GetId() uint32 {
	return 150
}

type MessageAqEscTelemetry struct {
	TimeBootMs  uint32
	Seq         uint8
	NumMotors   uint8
	NumInSeq    uint8
	Escid       [4]uint8
	StatusAge   [4]uint16
	DataVersion [4]uint8
	Data0       [4]uint32
	Data1       [4]uint32
}

func (*MessageAqEscTelemetry) GetId() uint32 {
	return 152
}

var Dialect = []gomavlib.Message{
	// common.xml
	&MessageHeartbeat{},
	&MessageSysStatus{},
	&MessageSystemTime{},
	&MessagePing{},
	&MessageChangeOperatorControl{},
	&MessageChangeOperatorControlAck{},
	&MessageAuthKey{},
	&MessageSetMode{},
	&MessageParamRequestRead{},
	&MessageParamRequestList{},
	&MessageParamValue{},
	&MessageParamSet{},
	&MessageGpsRawInt{},
	&MessageGpsStatus{},
	&MessageScaledImu{},
	&MessageRawImu{},
	&MessageRawPressure{},
	&MessageScaledPressure{},
	&MessageAttitude{},
	&MessageAttitudeQuaternion{},
	&MessageLocalPositionNed{},
	&MessageGlobalPositionInt{},
	&MessageRcChannelsScaled{},
	&MessageRcChannelsRaw{},
	&MessageServoOutputRaw{},
	&MessageMissionRequestPartialList{},
	&MessageMissionWritePartialList{},
	&MessageMissionItem{},
	&MessageMissionRequest{},
	&MessageMissionSetCurrent{},
	&MessageMissionCurrent{},
	&MessageMissionRequestList{},
	&MessageMissionCount{},
	&MessageMissionClearAll{},
	&MessageMissionItemReached{},
	&MessageMissionAck{},
	&MessageSetGpsGlobalOrigin{},
	&MessageGpsGlobalOrigin{},
	&MessageParamMapRc{},
	&MessageMissionRequestInt{},
	&MessageSafetySetAllowedArea{},
	&MessageSafetyAllowedArea{},
	&MessageAttitudeQuaternionCov{},
	&MessageNavControllerOutput{},
	&MessageGlobalPositionIntCov{},
	&MessageLocalPositionNedCov{},
	&MessageRcChannels{},
	&MessageRequestDataStream{},
	&MessageDataStream{},
	&MessageManualControl{},
	&MessageRcChannelsOverride{},
	&MessageMissionItemInt{},
	&MessageVfrHud{},
	&MessageCommandInt{},
	&MessageCommandLong{},
	&MessageCommandAck{},
	&MessageManualSetpoint{},
	&MessageSetAttitudeTarget{},
	&MessageAttitudeTarget{},
	&MessageSetPositionTargetLocalNed{},
	&MessagePositionTargetLocalNed{},
	&MessageSetPositionTargetGlobalInt{},
	&MessagePositionTargetGlobalInt{},
	&MessageLocalPositionNedSystemGlobalOffset{},
	&MessageHilState{},
	&MessageHilControls{},
	&MessageHilRcInputsRaw{},
	&MessageHilActuatorControls{},
	&MessageOpticalFlow{},
	&MessageGlobalVisionPositionEstimate{},
	&MessageVisionPositionEstimate{},
	&MessageVisionSpeedEstimate{},
	&MessageViconPositionEstimate{},
	&MessageHighresImu{},
	&MessageOpticalFlowRad{},
	&MessageHilSensor{},
	&MessageSimState{},
	&MessageRadioStatus{},
	&MessageFileTransferProtocol{},
	&MessageTimesync{},
	&MessageCameraTrigger{},
	&MessageHilGps{},
	&MessageHilOpticalFlow{},
	&MessageHilStateQuaternion{},
	&MessageScaledImu2{},
	&MessageLogRequestList{},
	&MessageLogEntry{},
	&MessageLogRequestData{},
	&MessageLogData{},
	&MessageLogErase{},
	&MessageLogRequestEnd{},
	&MessageGpsInjectData{},
	&MessageGps2Raw{},
	&MessagePowerStatus{},
	&MessageSerialControl{},
	&MessageGpsRtk{},
	&MessageGps2Rtk{},
	&MessageScaledImu3{},
	&MessageDataTransmissionHandshake{},
	&MessageEncapsulatedData{},
	&MessageDistanceSensor{},
	&MessageTerrainRequest{},
	&MessageTerrainData{},
	&MessageTerrainCheck{},
	&MessageTerrainReport{},
	&MessageScaledPressure2{},
	&MessageAttPosMocap{},
	&MessageSetActuatorControlTarget{},
	&MessageActuatorControlTarget{},
	&MessageAltitude{},
	&MessageResourceRequest{},
	&MessageScaledPressure3{},
	&MessageFollowTarget{},
	&MessageControlSystemState{},
	&MessageBatteryStatus{},
	&MessageAutopilotVersion{},
	&MessageLandingTarget{},
	&MessageEstimatorStatus{},
	&MessageWindCov{},
	&MessageGpsInput{},
	&MessageGpsRtcmData{},
	&MessageHighLatency{},
	&MessageHighLatency2{},
	&MessageVibration{},
	&MessageHomePosition{},
	&MessageSetHomePosition{},
	&MessageMessageInterval{},
	&MessageExtendedSysState{},
	&MessageAdsbVehicle{},
	&MessageCollision{},
	&MessageV2Extension{},
	&MessageMemoryVect{},
	&MessageDebugVect{},
	&MessageNamedValueFloat{},
	&MessageNamedValueInt{},
	&MessageStatustext{},
	&MessageDebug{},
	&MessageSetupSigning{},
	&MessageButtonChange{},
	&MessagePlayTune{},
	&MessageCameraInformation{},
	&MessageCameraSettings{},
	&MessageStorageInformation{},
	&MessageCameraCaptureStatus{},
	&MessageCameraImageCaptured{},
	&MessageFlightInformation{},
	&MessageMountOrientation{},
	&MessageLoggingData{},
	&MessageLoggingDataAcked{},
	&MessageLoggingAck{},
	&MessageVideoStreamInformation{},
	&MessageVideoStreamStatus{},
	&MessageWifiConfigAp{},
	&MessageProtocolVersion{},
	&MessageUavcanNodeStatus{},
	&MessageUavcanNodeInfo{},
	&MessageParamExtRequestRead{},
	&MessageParamExtRequestList{},
	&MessageParamExtValue{},
	&MessageParamExtSet{},
	&MessageParamExtAck{},
	&MessageObstacleDistance{},
	&MessageOdometry{},
	&MessageTrajectoryRepresentationWaypoints{},
	&MessageTrajectoryRepresentationBezier{},
	&MessageCellularStatus{},
	&MessageUtmGlobalPosition{},
	&MessageDebugFloatArray{},
	&MessageOrbitExecutionStatus{},
	&MessageStatustextLong{},
	&MessageSmartBatteryInfo{},
	&MessageSmartBatteryStatus{},
	&MessageWheelDistance{},
	// autoquad.xml
	&MessageAqTelemetryF{},
	&MessageAqEscTelemetry{},
}
